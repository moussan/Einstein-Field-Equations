name: Supabase CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
  
  test-edge-functions:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: Run Edge Function tests
        run: deno test --allow-net supabase/functions/calculate/calculate.test.js
  
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
  
  build-and-push-docker:
    needs: [test-frontend, test-edge-functions, lint]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/einstein-field-equations:latest
            ghcr.io/${{ github.repository_owner }}/einstein-field-equations:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  deploy-supabase:
    needs: [test-frontend, test-edge-functions, lint]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Supabase CLI
        run: npm install -g supabase
      
      - name: Login to Supabase
        run: supabase login --token ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      
      - name: Deploy Edge Functions
        run: supabase functions deploy calculate --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
      
      - name: Deploy Health Check Function
        run: supabase functions deploy health --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
      
      - name: Deploy Database Migrations
        run: |
          cd supabase
          supabase db push --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
  
  deploy-to-cloud:
    needs: [build-and-push-docker, deploy-supabase]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            # Pull the latest image
            docker pull ghcr.io/${{ github.repository_owner }}/einstein-field-equations:latest
            
            # Stop the existing container
            docker stop einstein-app || true
            docker rm einstein-app || true
            
            # Run the new container
            docker run -d \
              --name einstein-app \
              -p 80:80 \
              -e REACT_APP_SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
              -e REACT_APP_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }} \
              --restart unless-stopped \
              ghcr.io/${{ github.repository_owner }}/einstein-field-equations:latest
            
            # Clean up old images
            docker image prune -af 